- name: "Generate underlay intent for ENV:{{ env }} from Netbox"
  ansible.builtin.set_fact:
    generated_intent: "{{ lookup('template', 'generate_underlay_intent.j2') | from_yaml }}"

- name: "Save host underlay intent for ENV:{{ env }}"
  ansible.builtin.copy:
    content: "{{ generated_intent | to_yaml }}"
    dest: "{{ look_in + '/netbox_host_infra.yml' }}"
  delegate_to: localhost

- name: "Save group underlay intent for ENV:{{ env }}"
  ansible.builtin.copy:
    src: "files/group_infra.yml"
    dest: "{{ look_in + '/netbox_group_infra.yml' }}"
  delegate_to: localhost

- name: "Prune host underlay intents for ENV:{{ env }}"
  ansible.builtin.file:
    dest: "{{ var_file }}"
    state: absent
  loop: "{{ query('fileglob', *(extensions | map('ansible.builtin.regex_replace', '^(.*)$', ((look_in | default((playbook_dir, 'vars') | ansible.builtin.path_join)), '*.\\1') | ansible.builtin.path_join) | list)) }}"
  loop_control:
    loop_var: var_file
  when: (prune | default(true) | bool) and (var_file | ansible.builtin.basename is ansible.builtin.regex(files_matching | default(".*"))) and ((var_file | ansible.builtin.basename) != 'netbox_host_infra.yml')
  vars:
    files_matching: host_infra
    extensions:
      - yaml
      - yml
      - json

- name: "Prune group underlay intents for ENV:{{ env }}"
  ansible.builtin.file:
    dest: "{{ var_file }}"
    state: absent
  loop: "{{ query('fileglob', *(extensions | map('ansible.builtin.regex_replace', '^(.*)$', ((look_in | default((playbook_dir, 'vars') | ansible.builtin.path_join)), '*.\\1') | ansible.builtin.path_join) | list)) }}"
  loop_control:
    loop_var: var_file
  when: (prune | default(true) | bool) and (var_file | ansible.builtin.basename is ansible.builtin.regex(files_matching | default(".*"))) and ((var_file | ansible.builtin.basename) != 'netbox_group_infra.yml')
  vars:
    files_matching: group_infra
    extensions:
      - yaml
      - yml
      - json
