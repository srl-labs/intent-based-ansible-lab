#jinja2: lstrip_blocks: "True"
{% for pfx_set, pfx_spec in routing_policy.prefix_set.items() %}
- path: /policy-options/prefix-list[name={{pfx_set}}]
  operation: replace
  value:
    prefix:
    {% for pfx_entry in pfx_spec.prefix %}
      - ip-prefix: {{ pfx_entry['ip-prefix'] }}
      {% if pfx_entry['mask-length-range'] is defined %}
        type: range
        start-length: "{{ pfx_entry['mask-length-range'] | ansible.builtin.regex_replace('^(\\d+)\\.\\.(\\d+)$', '\\1') }}"
        end-length: "{{ pfx_entry['mask-length-range'] | ansible.builtin.regex_replace('^(\\d+)\\.\\.(\\d+)$', '\\2') }}"
      {% else %}
        type: exact
      {% endif %}
    {% else %}
      []
    {% endfor %}
{% endfor %}
{% for r_pol, pol_spec in routing_policy.policy.items() %}
- path: /policy-options/policy-statement[name={{r_pol}}]
  operation: replace
  value:
    entry:
    {% for stmt in pol_spec.statement %}
      - entry-id: "{{ stmt.name }}"
        from:
          {%if stmt.match['prefix-set'] is defined %}
          prefix-list: {{ stmt.match['prefix-set'] }}
          {% endif %}
          {%if stmt.match['protocol'] is defined %}
          protocol:
            name: {{ stmt.match['protocol'] }}
          {% endif %}
        action:
          action-type: {{ stmt.action['policy-result'] }}
    {% else %}
      []
    {% endfor %}
{% endfor %}
